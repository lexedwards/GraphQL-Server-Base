### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  error: Error
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Error {
  field: String
  message: String
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  deleteOneUser(email: String!, password: String!): UserPayload
  signUp(email: String!, name: String!, password: String!, phone: String): AuthPayload
  updateUser(currentPassword: String!, email: String, name: String, password: String, phone: String): UserPayload
}

enum OrderByArg {
  asc
  desc
}

type Query {
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: QueryUsersOrderByInput, where: QueryUsersWhereInput): [User!]!
}

input QueryUsersOrderByInput {
  id: OrderByArg
}

input QueryUsersWhereInput {
  email: StringFilter
  id: UUIDFilter
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  email: String!
  id: String!
  name: String!
  phone: String
}

type UserPayload {
  error: Error
  user: User
}

input UserWhereUniqueInput {
  email: String
  id: String
}

scalar UUID

input UUIDFilter {
  contains: UUID
  endsWith: UUID
  equals: UUID
  gt: UUID
  gte: UUID
  in: [UUID!]
  lt: UUID
  lte: UUID
  not: UUID
  notIn: [UUID!]
  startsWith: UUID
}
